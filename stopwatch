#!/usr/bin/env python

from __future__ import print_function, division

import datetime

try:
    input = raw_input
except NameError:
    pass

class StopWatch(object):
    """
        The StopWatch class records the time, the state of the stopwatch and the 
        total number of seconds measured.
    """

    def __init__(self):
        self.time = None
        self.state = False
        self.seconds = 0

    def reset(self):
        """ Reset the state of the stopwatch """
        self.time = None
        self.seconds = 0
        self.state = False

    def start(self):
        """ Start the stopwatch by recording the current time and switching the 
        state """
        self.time = datetime.datetime.now()
        self.state = True

    def stop(self):
        """ Stop the stopwatch by adding the elapsed seconds to total_seconds 
        and switching the state """
        diff = datetime.datetime.now() - self.time
        self.seconds += diff.total_seconds()
        self.time = datetime.datetime.now()
        self.state = False

    def switch(self):
        """ Switch the state of the stopwatch """
        if self.state:
            self.stop()
        else:
            self.start()

    def __str__(self):
        """ Print the current status and elapsed seconds """
        hours = self.seconds // 3600
        minutes = (self.seconds - 3600*hours) // 60
        seconds = (self.seconds % 60) // 1
        rest = self.seconds - 3600*hours - 60*minutes - seconds
        milli = round(rest*100.0)
        s = '%02i:%02i:%02i:%02i' % (hours, minutes, seconds, milli)
        if self.state:
            return '\033[92mRunning:\033[0m %s seconds passed' % (s)
        return '\033[91mStopped:\033[0m %s seconds passed' % (s)

def main():
    """
        Initialize the stopwatch and start it. Wait for any user input ended 
        with Return, then switch the state of the stopwatch (running/paused).  
        Handle a KeyboardInterrupt (Ctrl+C) gracefully, by stopping the 
        stopwatch and printing the total recorded time.

    """

    stopwatch = StopWatch()
    try:
        stopwatch.start()
        print("\033[92mStarted\033[0m stopwatch at: %s" % 
                stopwatch.time.strftime('%H:%M:%S'))
        while True:
            if (stopwatch.state):
                inp = input("Press Enter to pause...")
            else:
                inp = input("Press Enter to continue...")
            stopwatch.switch()
            print(stopwatch)
    except (KeyboardInterrupt, EOFError):
        if (stopwatch.state):
            stopwatch.stop()
        print()
        print(stopwatch)
    finally:
        print("Stopped stopwatch at: %s" % stopwatch.time.strftime('%H:%M:%S'))

if __name__ == '__main__':
    main()
